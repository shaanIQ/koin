apply plugin: 'org.jetbrains.kotlin.multiplatform'

archivesBaseName = 'koin-core'

def ideaActive = System.getProperty('idea.active') == 'true'

kotlin {
    jvm {
        withJava()
    }
    js(BOTH) {
        nodejs()
        browser()
    }

    if (ideaActive) {
        macosX64("darwin")
    } else {
        macosX64()
        macosArm64()
        iosArm32()
        iosArm64()
        iosX64()
        iosSimulatorArm64()
        linuxX64()
        linuxArm32Hfp()
        linuxMips32()
        watchosArm32()
        watchosArm64()
        watchosX86()
        watchosX64()
        watchosSimulatorArm64()
        tvosArm64()
        tvosX64()
        tvosSimulatorArm64()
        //    androidNativeArm32()
        //    androidNativeArm64()
        mingwX64()
    }

    sourceSets {
        commonMain {
            dependencies {
                api kotlin("stdlib-common")
            }
        }

        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
            }
        }

        jvmMain {
            dependencies {
                api kotlin("stdlib-jdk8")
            }
        }

        jvmTest {
            dependencies {
                implementation kotlin("test-junit")
                implementation "junit:junit:$junit_version"
                implementation "org.mockito:mockito-inline:$mockito_version"
            }
        }

        jsMain {
            dependsOn commonMain
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }

        jsTest {
            dependsOn commonTest
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }

        nativeMain {
            dependsOn commonMain
        }

        nativeTest {
            dependsOn commonTest
        }

        darwinMain {
            dependsOn nativeMain
        }

        darwinTest {
            dependsOn nativeTest
        }

        if(!ideaActive) {
            otherMain {
                dependsOn nativeMain
            }

            configure([
                    targets.macosX64,
                    targets.macosArm64,
                    targets.watchosArm32,
                    targets.watchosArm64,
                    targets.watchosX86,
                    targets.watchosX64,
                    targets.watchosSimulatorArm64,
                    targets.tvosArm64,
                    targets.tvosX64,
                    targets.tvosSimulatorArm64,
                    targets.iosX64,
                    targets.iosSimulatorArm64,
                    targets.iosArm32,
                    targets.iosArm64
            ]) {
                compilations.main.source(sourceSets.darwinMain)
                compilations.test.source(sourceSets.nativeTest)
            }
            configure([
                    targets.linuxX64,
                    targets.linuxArm32Hfp,
                    targets.linuxMips32,
                    targets.mingwX64
            ]) {
                compilations.main.source(sourceSets.otherMain)
                compilations.test.source(sourceSets.nativeTest)
            }
        }
    }
}

apply from: '../../gradle/publish-to-central.gradle'
